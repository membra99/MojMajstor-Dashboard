@model Universal.DTO.IDTO.TagIDTO

@{
	ViewData["Title"] = "Edit Tag";
}

<div class="container bg-light w-50">
	<div class="text-center">
		<h2>Edit Tag</h2>
	</div>
	@using (Html.BeginForm("EditTagModel", "Dashboard", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		<div class="form-group mb-3">
			@Html.HiddenFor(model => model.LanguageID,new { @id = "lang" })
		</div>
		<div class="form-group mb-3">
			@Html.LabelFor(model => model.Title, "Tag title:")
			@Html.TextBoxFor(model => model.Title, null, new { @class="form-control", placeholder = "Title"})
			@Html.ValidationMessageFor(model => model.Title, null, new { @class="text-danger" })
		</div>
		<div class="form-group mb-3">
			@Html.LabelFor(model => model.Description, "Tag description:")
			@Html.TextBoxFor(model => model.Description, new { @class="form-control", placeholder = "Description"})
			@Html.ValidationMessageFor(model => model.Description, null, new { @class="text-danger" })
		</div>

		@Html.HiddenFor(model => model.IsImageChanged, new {id = "IsImageChanged"})

		<div class="modal fade" id="addImageModal" tabindex="-1" aria-labelledby="addImageModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
			<div class="modal-dialog modal-dialog-centered modal-lg">
				<!-- Use modal-lg class for a larger modal -->
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="addImageModalLabel">Add New Image</h5>
					</div>
					<div class="modal-body">
						<!-- Nav tabs -->
						<ul class="nav nav-tabs" role="tablist">
							<li class="nav-item">
								<a class="nav-link" data-toggle="tab" href="#tab1" id="tab1Link">Add New Image</a>
							</li>
							<li class="nav-item">
								<a class="nav-link" data-toggle="tab" href="#tab2" id="tab2Link">Gallery</a>
							</li>
						</ul>

						<!-- Tab panes -->
						<div class="tab-content">
							<!-- Tab 1 Content -->
							<div id="tab1" class="tab-pane active">
								<div id="addImageForm">
									<div class="form-group">
										@Html.HiddenFor(model => model.IsImageChanged, new {id = "IsImageChanged"})
										<label for="imageName">Choose image</label>
										<input type="file" name="TagImage" runat="server" id="file" class="form-control" onchange="loadFile(event)" />
										<div class="form-group col-2 mb-3 text-center">
											<div class="image-container">
												<img src="@Url.Action("GetImage","Dashboard", new {path = Model.Photo})" id="tag-preview" style="margin-top:10px; border: 2px solid indigo;  width:auto; max-height:200px;">
												<a class="unset-button" id="unset" onclick="unsetImage()" title="Unset Image">x</a>
											</div>
										</div>
										<small id="imageNameError" class="form-text text-danger"></small>
									</div>
								</div>
							</div>

							<!-- Tab 2 Content -->
							<div id="tab2" class="tab-pane">
								@Html.HiddenFor(model => model.MediaId, new { @id="input-media" });
								<div id="tab2-gallery">
								</div>
							</div>
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" id="closeImageButton" data-dismiss="modal">Close</button>
						<button type="button" class="btn btn-dotnet" id="saveImageButton">Save Image</button>
					</div>
				</div>
			</div>
		</div>

		<div class="row">
			<div class="form-group col-12 mb-3">
				@Html.LabelRequiredFor(model => model.TagImage, "TagImage:", true)
				@*@<input type="file" name="Avatar" runat="server" id="file" class="form-control" onchange="loadFile(event)" />*@
				<button type="button" class="form-control p-2 btn-dotnet" id="openModalButton">Choose Image</button>
				@Html.ValidationMessageFor(model => model.TagImage, null, new { @class="text-danger" })
			</div>
		</div>

		@Html.HiddenFor(model => model.TagId)
		<div class="mx-auto mb-3 w-50">
			<input type="submit" value="Save" class="form-control p-2 btn-dotnet" />
		</div>
	}
</div>

@section Scripts{

	<script>
		let loaded = false;
		let loadFile = function (event) {
			// let image = document.getElementById('tag-preview');
			// image.src = URL.createObjectURL(event.target.files[0]);
			// let element = document.getElementById('unset');
			// element.classList.add("hover-unset");
			// var hiddenInput = document.getElementById("IsImageChanged");
			// hiddenInput.value = null;

			$('#tag-preview').attr('src', URL.createObjectURL(event.target.files[0]));
			$('#unset').addClass('hover-unset');
			$('#IsImageChanged').val(null);


		};

		$(document).ready(function () {

			// let image = document.getElementById('tag-preview');
			// var parts = image.src.split('/');
			// var result = parts.slice(3).join('/');
			// if (result != "Dashboard/GetImage") {
			// 	let element = document.getElementById('unset');
			// 	element.classList.add("hover-unset");
			// }

			let image = $('#tag-preview');
			let parts = image.attr('src').split('/');
			let result = parts.slice(3).join('/');

			if (result !== "Dashboard/GetImage") {
				$('#unset').addClass('hover-unset');
			}
		});

		function unsetImage(event) {
			// let image = document.getElementById('tag-preview');
			// image.src = '@Url.Action("GetImage","Dashboard",null)';
			// $("#file").val(null);
			// var hiddenInput = document.getElementById("IsImageChanged");
			// hiddenInput.value = "true";

			// let element = document.getElementById('unset');
			// element.classList.remove("hover-unset");
			// event.preventDefault();

			$('#tag-preview').attr('src', '@Url.Action("GetImage", "Dashboard", null)');
			$('#file').val(null);
			$('#IsImageChanged').val('true');

			$('#unset').removeClass('hover-unset');
			event.preventDefault();

		}

		$('#unset').click(function (event) {
			unsetImage(event);
			$(this).removeClass("hover-unset");//this.classList.remove("hover-unset");
			event.preventDefault();
		});

		document.addEventListener("DOMContentLoaded", function () {
			const openModalButton = $('#openModalButton');
			const addImageModal = $('#addImageModal');

			openModalButton.on('click', function () {
				addImageModal.modal('show');
			});

			$("#closeImageButton").click(function (event) {
				//unsetImage(event);
				$('#addImageModal').modal('hide');
			});

		});

		function unselectGallery() {
			$(".overlay-checked").find('.fas').toggleClass('disable-icon')
			$(".overlay-checked").removeClass("overlay-checked");
			$("#input-media").val(null);
		}

		$("#tab1Link").addClass("active");//document.getElementById("tab1Link").classList.add("active");

		// document.getElementById("tab1Link").addEventListener("click", function () {
		// 	document.getElementById("tab1Link").classList.add("active");
		// 	document.getElementById("tab2Link").classList.remove("active");

		// 	document.getElementById("tab1").classList.add("active");
		// 	document.getElementById("tab2").classList.remove("active");

		// 	unselectGallery();
		// });

		$('#tab1Link').on('click', function () {
			$('#tab1Link').addClass('active');
			$('#tab2Link').removeClass('active');

			$('#tab1').addClass('active');
			$('#tab2').removeClass('active');

			unselectGallery();
		});

		// document.getElementById("tab2Link").addEventListener("click", function (event) {
		// 	document.getElementById("tab2Link").classList.add("active");
		// 	document.getElementById("tab1Link").classList.remove("active");

		// 	document.getElementById("tab2").classList.add("active");
		// 	document.getElementById("tab1").classList.remove("active");


		// 	if (!loaded) {
		// 		let url = '@Url.Action("GalleryGrid","Dashboard")'
		// 		$("#tab2-gallery").load(url, function () {
		// 			$(".fa-hand-pointer").click(function () {
		// 				unsetImage(event);
		// 				loaded = true;
		// 				mediaId = this.dataset.mediaId;
		// 				let parentElement = this.parentElement;
		// 				let children = parentElement.getElementsByClassName('fas');

		// 				unselectGallery();

		// 				for (var i = 0; i < children.length; i++) {
		// 					children[i].classList.toggle('disable-icon');
		// 				}

		// 				parentElement.parentElement.classList.add("overlay-checked");
		// 			});
		// 		});
		// 	}
		// });

		$('#tab2Link').on('click', function (event) {
			//event.preventDefault(); Prevent default action if necessary

			$('#tab2Link').addClass('active');
			$('#tab1Link').removeClass('active');

			$('#tab2').addClass('active');
			$('#tab1').removeClass('active');

			unsetImage(event); 

			if (!loaded) {
				let url = '@Url.Action("GalleryGrid", "Dashboard")';
				$('#tab2-gallery').load(url, function () {
					$('.fa-hand-pointer').on('click', function () {
						unsetImage(event); 
						loaded = true;
						mediaId = $(this).data('mediaId');
						let parentElement = $(this).parent();
						let children = parentElement.find('.fas');

						unselectGallery(); 

						children.each(function () {
							$(this).toggleClass('disable-icon');
						});

						parentElement.parent().addClass('overlay-checked');
					});
				});
			}
		});

		let mediaId = null;
		$("#saveImageButton").click(function () {
			$("#input-media").val(mediaId);
			$('#addImageModal').modal('hide');
		});

		$('#lang').val($('#language').val());

		$('#language').change(function () {
			$('#lang').val($(this).val());
		});

	</script>
}