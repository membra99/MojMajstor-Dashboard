@model List<Universal.DTO.ODTO.SiteContentODTO>
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration


@{
	ViewData["Title"] = ViewBag.siteType;
	string domain = Configuration["URL:MainUrl"];
}

<div class="pb-2 d-flex justify-content-end">
@if (ViewBag.siteType == "Page")
{
	<button type="button" class="btn btn-dotnet" id="addPageButton">Add New Page</button>
}
else
{
	<button type="button" class="btn btn-dotnet" id="addBlogButton">Add New Blog</button>
}
</div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Deletion</h5>

            </div>
            <div class="modal-body">
				@if (ViewBag.siteType == "Page")
				{
					<p>Are you sure you want to delete this Page ?</p>
				}
				else
				{
					<p>Are you sure you want to delete this Blog ?</p>
				}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeConfirmDeleteButton">No</button>
                <button type="button" class="btn btn-danger btn-confirm-delete">Yes</button>
            </div>
        </div>
    </div>
</div>


<div class="col-12">
	<table id="siteContentTable" class="table table-striped display text-center w-100">
		<thead>
			<tr>
				<th>Title</th>
				<th>MediaId</th>
				<th>SeoId</th>
				@if (ViewBag.siteType != "Page")
				{
					<th>TagId</th>
				}
				<th>IsActive</th>
				<th>Action</th>
			</tr>
		</thead>
		<tbody>
		</tbody>
	</table>
</div>


@section Scripts
	{
	<script>
		toggleLoading();
		$(document).ready(function () {

			let isPaginate = false;
			let dataTable = null;

			const urlParams = new URLSearchParams(window.location.search);
			const type = urlParams.get('type');

			const defaultLangID = 1;

			//console.log(type);

			$(document).on('click', '#addPageButton', function () {
				window.location.href = '/Dashboard/PostSiteContent?siteContentType=' + 1;
			});

			$(document).on('click', '#addBlogButton', function () {
				window.location.href = '/Dashboard/PostSiteContent?siteContentType=' + 2;
			});


			$("#closeConfirmDeleteButton").click(function () {
				$('#confirmDeleteModal').modal('hide');
			});

			$('#siteContentTable tbody').on('click', 'td.actions-control', function () {
				var tr = $(this).closest('tr');
				var row = dataTable.row(tr);

				var targetElement = $(event.target);

				if (targetElement.hasClass('fa-trash-can')) {
					var rowData = row.data();

					let selectedAttributeId = rowData.siteContentId;

					// Show a confirmation modal
					$('#confirmDeleteModal').modal('show');

					$('#confirmDeleteModal').on('click', '.btn-confirm-delete', function () {

						// Close the confirmation modal
						$('#confirmDeleteModal').modal('hide');

						$.ajax({
							type: 'DELETE',
							url: '@domain' + 'api/SiteContent/' + selectedAttributeId,
							contentType: 'application/json',
							success: function (response) {
								showToast("SiteContet deleted succesfully.", "success");
								updateTableData();
							},
							error: function (xhr, status, error) {
								showToast("Error: " + error + ":" + status, "error");
							}
						});
					});
				}
			});

			function updateTableData() {
				let lang = $('#language').val();
				$.get('@domain' + 'api/SiteContent/AllByType?type=" + '@ViewBag.siteType' + "&langId=' + lang, function (data) {
					dataTable.clear().rows.add(data).draw();
                }).fail(function (xhr, status, error) {
                    dataTable.clear().draw();
                });
            }


			function loadData(type, langID) {
				//console.log(type, langID);
				$.ajax({
					url: '/api/SiteContent/AllByType',
					method: 'GET',
					data: { type: type, langID: langID },
					dataType: 'json',
					success: function (data) {
						isPaginate = data.length > 10 ? true : false;

						if (dataTable) {
							dataTable.destroy();
						}

						dataTable = $('#siteContentTable').DataTable({
							data: data,
							scrollX: true,
							columns: [
								{ data: "title" },
								{ data: "mediaId" },
								{ data: "seoId" },
								@if(ViewBag.siteType != "Page")
								{
									@Html.Raw("{ data: 'tagId' },")
								}
								{ data: "isActive" },
								{
									data: 'siteContentId',
									className: 'actions-control',
									render: function (data, type, row) {
										return '<a href="/Dashboard/EditSiteContent?siteContentId=' + data + '">' +
											'<i class="fa-solid fa-pen icon-spacing"></i></a> ' +
											'<i class="fa-solid fa-trash-can icon-spacing"></i>'
									}
								},
							],
							columnDefs: [
								{ targets: '_all', className: 'dt-left' }
							],
							bPaginate: isPaginate,
							initComplete: function (settings, json) {
								toggleLoading();
							}
						});
					},
					error: function (error) {
						console.error('Error loading data: ' + JSON.stringify(error));
					}
				});
			}

			$('#language').on('change', function () {
				const selectedLangID = $(this).val();
				loadData(type, selectedLangID);
			});
			loadData(type, defaultLangID);
		});
	</script>
}