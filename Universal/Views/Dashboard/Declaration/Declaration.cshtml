@model List<Universal.DTO.ODTO.DeclarationODTO>
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration


@{
    ViewData["Title"] = "Declaration";
    string domain = Configuration["URL:MainUrl"];
}

<div class="col-12">
    <div class="pb-2 d-flex justify-content-end">
        @Html.ActionLink("Add New Declaration", "NewDeclaration", "Dashboard", null, new { @class = "btn btn-dotnet" })
    </div>
    <table id="declarationTable" class="table table-striped display text-center">
        <thead>
            <tr>
                <th>Declaration Name</th>
                <th>Model</th>
                <th>Name & Type of Product</th>
                <th>Distributor</th>
                <th>Country of origin</th>
                <th>Consumer Rights</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Deletion</h5>

            </div>
            <div class="modal-body">
                Are you sure you want to delete this declaration?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeConfirmDeleteButton">No</button>
                <button type="button" class="btn btn-danger btn-confirm-delete">Yes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        toggleLoading();
        console.log(@Json.Serialize(Model));
        $(document).ready(function () {

            $("#closeConfirmDeleteButton").click(function () {
                $('#confirmDeleteModal').modal('hide');
            });

            $('#declarationTable tbody').on('click', 'td.actions-control', function () {
                var tr = $(this).closest('tr');
                var row = declarationTable.row(tr);

                var targetElement = $(event.target);

                if (targetElement.hasClass('fa-trash-can')) {
                    var rowData = row.data();

                    let selectedAttributeId = rowData.declarationId;

                    // Show a confirmation modal
                    $('#confirmDeleteModal').modal('show');

                    $('#confirmDeleteModal').on('click', '.btn-confirm-delete', function () {

                        // Close the confirmation modal
                        $('#confirmDeleteModal').modal('hide');

                        $.ajax({
                            type: 'DELETE',
                            url: '@domain' + 'api/Declaration/' + selectedAttributeId,
                            contentType: 'application/json',
                            success: function (response) {
                                showToast("Declaration " + response.declarationName + " deleted succesfully.", "success");
                                updateTableData();
                            },
                            error: function (xhr, status, error) {
                                showToast("Error: " + error + ":" + status, "error");
                            }
                        });
                    });
                }
            });

            let data = @Json.Serialize(Model);
            let isPaginate = data.length > 10 ? true : false;
            let declarationTable = $('#declarationTable').DataTable({
                data: data,
                columns: [
                    { data: "declarationName" },
                    { data: "model" },
                    { data: "nameAndTypeOfProduct" },
                    { data: "distributor" },
                    { data: "countryOfOrigin" },
                    { data: "consumerRights" },
                    {
                        data: "declarationId",
                        className: 'actions-control',
                        render: function (data, type, row) {
                            return '<a href="/Dashboard/EditDeclaration?id=' + data + '"><i class="fas fa-pen icon-spacing"></i></a>' +
                                '<a href="/Dashboard/PreviewDeclaration?id=' + data + '"><i class="fa-solid fa-eye icon-spacing"></i></a> ' +
                                '<i class="fa-solid fa-trash-can icon-spacing"></i>';
                        }
                    },
                ],
                columnDefs: [
                    { targets: '_all', className: 'dt-left' }
                ],
                bPaginate: isPaginate,
                initComplete: function (settings, json) {
                    toggleLoading();
                }

            });


			function updateTableData() {
				$.get('@domain' + 'api/Declaration/GetAll', function (data) {
					declarationTable.clear().rows.add(data).draw();
				}).fail(function (xhr, status, error) {
					declarationTable.clear().draw();
				});
			}

        });
    </script>
}
